
#java设计模式五（原型模式）

1、什么是原型模式？

用原型实例指定创建对象的类型,并且通过拷贝这些原型创建新的对象。

2、为什么需要Prototype模式？

引入原型模式的本质在于利用已有的一个原型对象，快速的生成和原型对象一样的实例。

3、引入Prototype模式带来了什么好处？

引入Prototype模式后我们不再需要一个与具体产品等级结构平行的工厂方法类。

4、原型模式的表现形式

浅复制：将一个对象复制后，基本数据类型的变量都会重新创建，而引用类型，指向的还是原对象所指向的。
深复制：将一个对象复制后，不论是基本数据类型还有引用类型，都是重新创建的。
简单来说，就是深复制进行了完全彻底的复制，而浅复制不彻底。



